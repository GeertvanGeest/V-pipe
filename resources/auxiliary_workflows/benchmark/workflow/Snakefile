# setup
configfile: "config/config.yaml"


# method selection
if config["method_list"] is None:
    (method_list,) = glob_wildcards("resources/method_definitions/{method}.py")
else:
    method_list = config["method_list"]

print(method_list)


# rule definitions
rule all:
    input:
        "results/performance_measures/",


rule simulate_reads:
    output:
        fname_fastq="results/simulated_reads/reads.fastq",
        fname_bam="results/simulated_reads/reads.bam",
        fname_reference="results/simulated_reads/reference.fasta",
        dname_work=directory("results/simulated_reads/work/"),
    conda:
        "envs/simulate_reads.yaml"
    script:
        "scripts/simulate_reads.py"


rule run_method:
    input:
        script="resources/method_definitions/{method}.py",
        fname_bam="results/simulated_reads/reads.bam",
        fname_reference="results/simulated_reads/reference.fasta",
    output:
        fname_results="results/method_runs/{method}/snvs.vcf",
        dname_work=directory("results/method_runs/{method}/work/"),
    params:
        script_name=lambda wildcards, input: "../" + input.script,
    conda:
        "envs/run_method.yaml"
    script:
        "{params.script_name}"


rule performance_measures:
    input:
        vcf_list=expand("results/method_runs/{method}/snvs.vcf", method=method_list),
    output:
        dname_out=directory("results/performance_measures/"),
    script:
        "scripts/performance_measures.py"
